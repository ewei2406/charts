apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "forgemc.fullname" . }}
  labels:
    {{- include "forgemc.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "forgemc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "forgemc.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      volumes:
        - name: backups-storage
          persistentVolumeClaim:
            claimName: {{ include "forgemc.fullname" . }}-backups-pvc
      initContainers:
        - name: init-world-and-mods
          image: busybox
          command: ['sh', '-c', 'cp -r /host-world/* /app/world/ && cp -r /host-mods/* /app/mods/']
          volumeMounts:
            - name: host-world
              mountPath: "/host-world"
            - name: app-world
              mountPath: "/app/world"
            - name: host-mods
              mountPath: "/host-mods"
            - name: app-mods
              mountPath: "/app/mods"
      containers:
        - name: forgemc
          image: ghcr.io/ewei2406/forgemc:{{ .Values.image.tag }}
          stdin: true
          tty: true
          ports:
            - containerPort: 25565
              hostPort: 30065
              name: "minecraft"
          volumeMounts:
            - name: backups-storage
              mountPath: "/app/backups"
            - name: app-world
              mountPath: "/app/world"
            - name: app-mods
              mountPath: "/app/mods"
      volumes:
        - name: host-world
          hostPath:
            path: {{ .Values.world.hostPath }}
            type: Directory
        - name: app-world
          emptyDir: {}
        - name: host-mods
          hostPath:
            path: {{ .Values.mods.hostPath }}
            type: Directory
        - name: app-mods
          emptyDir: {}